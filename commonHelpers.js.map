{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\n\nimport 'flatpickr/dist/flatpickr.min.css';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst datetimePicker = document.getElementById('datetime-picker');\nconst startButton = document.querySelector('button[data-start]');\nconst dataDays = document.querySelector('[data-days]');\nconst dataHours = document.querySelector('[data-hours]');\nconst dataMinutes = document.querySelector('[data-minutes]');\nconst dataSeconds = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\nlet timerValue;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    const currentDate = new Date();\n    if (userSelectedDate < currentDate) {\n      iziToast.error({\n        title: 'Error',\n        message: `Please choose a data in the future`,\n      });\n    } else {\n      timerValue = convertMs(userSelectedDate - currentDate);\n    }\n  },\n};\n\nstartButton.addEventListener('click', () => {\n  updateTimerView(timerValue);\n});\n\nconst fp = flatpickr(datetimePicker, options);\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction updateTimerView({ days, hours, minutes, seconds }) {\n  dataDays.innerHTML = days;\n  dataHours.innerHTML = hours;\n  dataMinutes.innerHTML = minutes;\n  dataSeconds.innerHTML = seconds;\n}\n\nfunction updateTimer() {}\n"],"names":["datetimePicker","startButton","dataDays","dataHours","dataMinutes","dataSeconds","userSelectedDate","timerValue","options","selectedDates","currentDate","iziToast","convertMs","updateTimerView","flatpickr","ms","days","hours","minutes","seconds"],"mappings":"+IAMA,MAAMA,EAAiB,SAAS,eAAe,iBAAiB,EAC1DC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3D,IAAIC,EAAmB,KACnBC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBH,EAAmBG,EAAc,CAAC,EAClC,MAAMC,EAAc,IAAI,KACpBJ,EAAmBI,EACrBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EAEDJ,EAAaK,EAAUN,EAAmBI,CAAW,CAExD,CACH,EAEAT,EAAY,iBAAiB,QAAS,IAAM,CAC1CY,EAAgBN,CAAU,CAC5B,CAAC,EAEUO,EAAUd,EAAgBQ,CAAO,EAE5C,SAASI,EAAUG,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASN,EAAgB,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC1DjB,EAAS,UAAYc,EACrBb,EAAU,UAAYc,EACtBb,EAAY,UAAYc,EACxBb,EAAY,UAAYc,CAC1B"}