{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\n\nimport 'flatpickr/dist/flatpickr.min.css';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst datetimePicker = document.getElementById('datetime-picker');\nconst startButton = document.querySelector('button[data-start]');\nconst dataDays = document.querySelector('[data-days]');\nconst dataHours = document.querySelector('[data-hours]');\nconst dataMinutes = document.querySelector('[data-minutes]');\nconst dataSeconds = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\nlet timerMiliseconds;\nlet setIntervalId;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    const currentDate = new Date();\n    if (userSelectedDate < currentDate) {\n      iziToast.error({\n        title: 'Error',\n        message: `Please choose a data in the future`,\n      });\n    } else {\n      timerMiliseconds = userSelectedDate - currentDate;\n      startButton.removeAttribute('disabled');\n    }\n  },\n};\n\nconst onStartButtonClick = () => {\n  startButton.setAttribute('disabled', '');\n  datetimePicker.setAttribute('disabled', '');\n  setIntervalId = setInterval(updateTimer, 1000);\n};\n\nconst fp = flatpickr(datetimePicker, options);\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction updateTimerView({ days, hours, minutes, seconds }) {\n  dataDays.innerHTML = String(days).padStart(2, '0');\n  dataHours.innerHTML = String(hours).padStart(2, '0');\n  dataMinutes.innerHTML = String(minutes).padStart(2, '0');\n  dataSeconds.innerHTML = String(seconds).padStart(2, '0');\n}\n\nfunction updateTimer() {\n  let timerObject = convertMs(timerMiliseconds);\n  updateTimerView(timerObject);\n  timerMiliseconds = timerMiliseconds - 1000;\n  if (timerMiliseconds <= 0) {\n    clearInterval(setIntervalId);\n    datetimePicker.removeAttribute('disabled');\n  }\n}\n\nstartButton.addEventListener('click', onStartButtonClick);\n"],"names":["datetimePicker","startButton","dataDays","dataHours","dataMinutes","dataSeconds","userSelectedDate","timerMiliseconds","setIntervalId","options","selectedDates","currentDate","iziToast","onStartButtonClick","updateTimer","flatpickr","convertMs","ms","days","hours","minutes","seconds","updateTimerView","timerObject"],"mappings":"+IAMA,MAAMA,EAAiB,SAAS,eAAe,iBAAiB,EAC1DC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3D,IAAIC,EAAmB,KACnBC,EACAC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBJ,EAAmBI,EAAc,CAAC,EAClC,MAAMC,EAAc,IAAI,KACpBL,EAAmBK,EACrBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,GAEDL,EAAmBD,EAAmBK,EACtCV,EAAY,gBAAgB,UAAU,EAEzC,CACH,EAEMY,EAAqB,IAAM,CAC/BZ,EAAY,aAAa,WAAY,EAAE,EACvCD,EAAe,aAAa,WAAY,EAAE,EAC1CQ,EAAgB,YAAYM,EAAa,GAAI,CAC/C,EAEWC,EAAUf,EAAgBS,CAAO,EAE5C,SAASO,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAgB,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC1DnB,EAAS,UAAY,OAAOgB,CAAI,EAAE,SAAS,EAAG,GAAG,EACjDf,EAAU,UAAY,OAAOgB,CAAK,EAAE,SAAS,EAAG,GAAG,EACnDf,EAAY,UAAY,OAAOgB,CAAO,EAAE,SAAS,EAAG,GAAG,EACvDf,EAAY,UAAY,OAAOgB,CAAO,EAAE,SAAS,EAAG,GAAG,CACzD,CAEA,SAASP,GAAc,CACrB,IAAIS,EAAcP,EAAUT,CAAgB,EAC5Ce,EAAgBC,CAAW,EAC3BhB,EAAmBA,EAAmB,IAClCA,GAAoB,IACtB,cAAcC,CAAa,EAC3BR,EAAe,gBAAgB,UAAU,EAE7C,CAEAC,EAAY,iBAAiB,QAASY,CAAkB"}